function JazzyScroll(settings){const _this=this;const _defaultSpeed=500;const _defaultDelay=0;const _defaultOffset=0;const _jazzyElements=document.querySelectorAll('[data-jazzy-scroll]:not(.animated-in)');this.speed=settings.speed?settings.speed:_defaultSpeed;this.delay=settings.delay?settings.delay:_defaultDelay;this.offset=settings.offset?settings.offset:_defaultOffset;this.jazzyElements=[];if(typeof window.orientation!=='undefined'){this.offset=0;}
this.addElement=function(element){if(!element){return;}
element.jazzySpeed=(element.getAttribute('data-jazzy-scroll-speed')?element.getAttribute('data-jazzy-scroll-speed'):this.speed)+'ms';element.jazzyDelay=(element.getAttribute('data-jazzy-scroll-delay')?element.getAttribute('data-jazzy-scroll-delay'):this.delay)+'ms';element.jazzyOffset=parseInt(element.getAttribute('data-jazzy-scroll-offset')?element.getAttribute('data-jazzy-scroll-offset'):this.offset);this.jazzyElements.push(element);}
this.isInViewport=function(element){if(!element){return;}
const viewportBottom=window.innerHeight;const offset=element.jazzyOffset?element.jazzyOffset:0;const offsetTop=element.getBoundingClientRect().top+offset;return offsetTop<=viewportBottom;}
this.init=function(){const jazzyElementsLength=this.jazzyElements.length;if(jazzyElementsLength<=0){return;}
let indexOffset=0;for(let i=0;i<jazzyElementsLength;i++){let index=i-indexOffset;let element=this.jazzyElements[index];if(this.isInViewport(element)){element.style.transitionDuration=element.jazzySpeed;element.style.transitionDelay=element.jazzyDelay;element.classList.add('animated-in');this.jazzyElements.splice(index,1);indexOffset+=1;}}}
for(let i=0;i<_jazzyElements.length;i++){let element=_jazzyElements[i];this.addElement(element);}
document.addEventListener('scroll',function(){_this.init();});document.addEventListener('resize',function(){_this.init();});if(document.readyState!=='loading'){_this.init();}else{document.addEventListener('DOMContentLoaded',function(){_this.init();});}
const observerOptions={attributes:false,characterData:false,childList:true,subtree:true}
const observer=new MutationObserver(function(mutationsList){for(let i=0;i<mutationsList.length;i++){for(let x=0;x<mutationsList[i].addedNodes.length;x++){let element=mutationsList[i].addedNodes[x];if(element.nodeType==Node.ELEMENT_NODE&&element.hasAttribute('data-jazzy-scroll')&&!element.classList.contains('animated-in')){_this.addElement(element);}}}});observer.observe(document,observerOptions);}